Metadata:
  cdk_nag:
    rules_to_suppress:
      - reason: API Gateway uses custom Lambda Authorizer for /token endpoint
        id: AwsSolutions-COG4
      - reason: API Gateway uses custom Lambda Authorizer for /token endpoint
        id: AwsSolutions-APIG4
      - reason: Customer to decide if WAF is required since there are costs associated
        id: AwsSolutions-APIG3
      - reason: API Gateway default logging is enabled via deployOptions
        id: AwsSolutions-APIG1
      - reason: AWSLambdaBasicExecutionRole is scoped in`
        id: AwsSolutions-IAM4
      - reason: CreateOpenIDConnectProvider requires oidc-provider/*
        id: AwsSolutions-IAM5
      - reason: Python 3.11 to stay compatible for Authlib
        id: AwsSolutions-L1
      - reason: REST API request validation is handled by Lambda Flask
        id: AwsSolutions-APIG2
Resources:
  OIDCAllowListParameter33938ED1:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The Allow listed domains for TVM OIDC Provider
      Name: /oidc/allow-list
      Type: String
      Value: http://localhost:5174,https://www.my-cool-website.com,https://mysubdomain.my-cool-website.com
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OIDCAllowListParameter/Resource
  OIDCClientIdEB1164EC:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The Client ID for TVM provider
      Name: /oidc/client_id
      Type: String
      Value: oidc-tvm-592995829936
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OIDCClientId/Resource
  OIDCClientSecretB1564C4B:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The Client ID for TVM provider
      Name: /oidc/client_secret
      Type: String
      Value: 009e536e781fc8f2fc6df9c7
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OIDCClientSecret/Resource
  KeyGenLambdaRoleF63759B9:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      RoleName: tvm-key-gen-lambda-role
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/KeyGenLambdaRole/Resource
  KeyGenLambdaRoleDefaultPolicy5EA7EF13:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ssm:DeleteParameter
              - ssm:DeleteParameters
              - ssm:PutParameter
            Effect: Allow
            Resource:
              - arn:aws:ssm:us-east-1:592995829936:parameter/oidc/client_id
              - arn:aws:ssm:us-east-1:592995829936:parameter/oidc/client_secret
              - arn:aws:ssm:us-east-1:592995829936:parameter/oidc/private_key
              - arn:aws:ssm:us-east-1:592995829936:parameter/oidc/public_key
        Version: "2012-10-17"
      PolicyName: KeyGenLambdaRoleDefaultPolicy5EA7EF13
      Roles:
        - Ref: KeyGenLambdaRoleF63759B9
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/KeyGenLambdaRole/DefaultPolicy/Resource
  OidcLambdaRole0022AC47:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      RoleName: tvm-oidc-lambda-role
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcLambdaRole/Resource
  OidcLambdaRoleDefaultPolicy283E0578:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: ssm:GetParameter
            Effect: Allow
            Resource:
              - arn:aws:ssm:us-east-1:592995829936:parameter/oidc/allow-list
              - arn:aws:ssm:us-east-1:592995829936:parameter/oidc/client_id
              - arn:aws:ssm:us-east-1:592995829936:parameter/oidc/client_secret
              - arn:aws:ssm:us-east-1:592995829936:parameter/oidc/private_key
              - arn:aws:ssm:us-east-1:592995829936:parameter/oidc/public_key
        Version: "2012-10-17"
      PolicyName: OidcLambdaRoleDefaultPolicy283E0578
      Roles:
        - Ref: OidcLambdaRole0022AC47
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcLambdaRole/DefaultPolicy/Resource
  KeyGenLambdaAB45491F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: 592995829936.dkr.ecr.us-east-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-592995829936-us-east-1:42ce06c427a2f70852ffa4df2790501da7d87697184af9d82e0e8bba675a43dc
      FunctionName: tvm-key-gen-lambda
      PackageType: Image
      Role:
        Fn::GetAtt:
          - KeyGenLambdaRoleF63759B9
          - Arn
      Timeout: 300
    DependsOn:
      - KeyGenLambdaRoleDefaultPolicy5EA7EF13
      - KeyGenLambdaRoleF63759B9
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/KeyGenLambda/Resource
      aws:asset:path: asset.42ce06c427a2f70852ffa4df2790501da7d87697184af9d82e0e8bba675a43dc
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:property: Code.ImageUri
  KeyGenProviderframeworkonEventServiceRole9BD5CD7B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/KeyGenProvider/framework-onEvent/ServiceRole/Resource
  KeyGenProviderframeworkonEventServiceRoleDefaultPolicy71C9769B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - KeyGenLambdaAB45491F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - KeyGenLambdaAB45491F
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: KeyGenProviderframeworkonEventServiceRoleDefaultPolicy71C9769B
      Roles:
        - Ref: KeyGenProviderframeworkonEventServiceRole9BD5CD7B
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/KeyGenProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource
  KeyGenProviderframeworkonEvent257FE08A:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-592995829936-us-east-1
        S3Key: 4dc48ffba382f93077a1e6824599bbd4ceb6f91eb3d9442eca3b85bdb1a20b1e.zip
      Description: AWS CDK resource provider framework - onEvent (TVMOidcIssuerStack/KeyGenProvider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - KeyGenLambdaAB45491F
              - Arn
      Handler: framework.onEvent
      Role:
        Fn::GetAtt:
          - KeyGenProviderframeworkonEventServiceRole9BD5CD7B
          - Arn
      Runtime: nodejs20.x
      Timeout: 900
    DependsOn:
      - KeyGenProviderframeworkonEventServiceRoleDefaultPolicy71C9769B
      - KeyGenProviderframeworkonEventServiceRole9BD5CD7B
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/KeyGenProvider/framework-onEvent/Resource
      aws:asset:path: asset.4dc48ffba382f93077a1e6824599bbd4ceb6f91eb3d9442eca3b85bdb1a20b1e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  KeyGenCustomResource:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - KeyGenProviderframeworkonEvent257FE08A
          - Arn
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/KeyGenCustomResource/Default
  OIDCLambdaAuthorizerFn233BB6A3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-592995829936-us-east-1
        S3Key: fd99348a246b44ad2ae4adbae8f836fe399582a61e82ab8e52b78ca01e47018c.zip
      Environment:
        Variables:
          CLIENT_ID_PARAM: /oidc/client_id
          CLIENT_SECRET_PARAM: /oidc/client_secret
          OIDC_ALLOW_LIST: /oidc/allow-list
      FunctionName: tvm-oidc-lambda-authorizer
      Handler: app.lambda_handler
      Role:
        Fn::GetAtt:
          - OidcLambdaRole0022AC47
          - Arn
      Runtime: python3.11
      Timeout: 300
    DependsOn:
      - OidcLambdaRoleDefaultPolicy283E0578
      - OidcLambdaRole0022AC47
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OIDCLambdaAuthorizerFn/Resource
      aws:asset:path: asset.fd99348a246b44ad2ae4adbae8f836fe399582a61e82ab8e52b78ca01e47018c
      aws:asset:is-bundled: false
      aws:asset:property: Code
  OIDCLambdaAuthorizerFnTVMOidcIssuerStackOIDCLambdaAuthorizer32A584F4Permissions74E56FA8:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - OIDCLambdaAuthorizerFn233BB6A3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:us-east-1:592995829936:"
            - Ref: OidcApi1FA5902F
            - /authorizers/
            - Ref: OIDCLambdaAuthorizer2ED4912C
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OIDCLambdaAuthorizerFn/TVMOidcIssuerStackOIDCLambdaAuthorizer32A584F4:Permissions
  OidcApi1FA5902F:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: Handles OIDC issuance and verification.
      Name: OIDC Issuer Service
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Resource
  OidcApiCloudWatchRole7BDC928B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/CloudWatchRole/Resource
  OidcApiAccount595DB934:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - OidcApiCloudWatchRole7BDC928B
          - Arn
    DependsOn:
      - OidcApi1FA5902F
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Account
  OidcApiDeployment0CD4431Bacb151289731dc073fcb4f0aeac29eba:
    Type: AWS::ApiGateway::Deployment
    Properties:
      Description: Handles OIDC issuance and verification.
      RestApiId:
        Ref: OidcApi1FA5902F
    DependsOn:
      - OidcApiwellknownjwksjsonGETF0F40DDF
      - OidcApiwellknownjwksjsonOPTIONS880DFE8A
      - OidcApiwellknownjwksjsonA2B6BE5A
      - OidcApiwellknownopenidconfigurationGET661390FA
      - OidcApiwellknownopenidconfigurationOPTIONS4C917684
      - OidcApiwellknownopenidconfiguration3056CD13
      - OidcApiwellknownOPTIONS82F1FBFC
      - OidcApiwellknown490C3B76
      - OidcApiOPTIONSD74CD4E0
      - OidcApitokenOPTIONS88603E27
      - OidcApitokenPOSTB8B324FC
      - OidcApitoken45B896ED
      - OIDCLambdaAuthorizer2ED4912C
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Deployment/Resource
  OidcApiDeploymentStageprod15405D20:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId:
        Ref: OidcApiDeployment0CD4431Bacb151289731dc073fcb4f0aeac29eba
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: /*
      RestApiId:
        Ref: OidcApi1FA5902F
      StageName: prod
    DependsOn:
      - OidcApiAccount595DB934
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/DeploymentStage.prod/Resource
  OidcApiOPTIONSD74CD4E0:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Expose-Headers: "'Access-Control-Allow-Origin,Access-Control-Allow-Credentials'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Expose-Headers: true
          StatusCode: "200"
      ResourceId:
        Fn::GetAtt:
          - OidcApi1FA5902F
          - RootResourceId
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/OPTIONS/Resource
  OidcApitoken45B896ED:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - OidcApi1FA5902F
          - RootResourceId
      PathPart: token
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/token/Resource
  OidcApitokenOPTIONS88603E27:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Expose-Headers: "'Access-Control-Allow-Origin,Access-Control-Allow-Credentials'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Expose-Headers: true
          StatusCode: "200"
      ResourceId:
        Ref: OidcApitoken45B896ED
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/token/OPTIONS/Resource
  OidcApitokenPOSTApiPermissionTVMOidcIssuerStackOidcApi522E9F68POSTtoken243A8080:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - OidcLambdaCD904E33
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:us-east-1:592995829936:"
            - Ref: OidcApi1FA5902F
            - /
            - Ref: OidcApiDeploymentStageprod15405D20
            - /POST/token
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/token/POST/ApiPermission.TVMOidcIssuerStackOidcApi522E9F68.POST..token
  OidcApitokenPOSTApiPermissionTestTVMOidcIssuerStackOidcApi522E9F68POSTtokenA2B6F25F:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - OidcLambdaCD904E33
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:us-east-1:592995829936:"
            - Ref: OidcApi1FA5902F
            - /test-invoke-stage/POST/token
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/token/POST/ApiPermission.Test.TVMOidcIssuerStackOidcApi522E9F68.POST..token
  OidcApitokenPOSTB8B324FC:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: CUSTOM
      AuthorizerId:
        Ref: OIDCLambdaAuthorizer2ED4912C
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - OidcLambdaCD904E33
                  - Arn
              - /invocations
      ResourceId:
        Ref: OidcApitoken45B896ED
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/token/POST/Resource
  OidcApiwellknown490C3B76:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - OidcApi1FA5902F
          - RootResourceId
      PathPart: .well-known
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/Resource
  OidcApiwellknownOPTIONS82F1FBFC:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Expose-Headers: "'Access-Control-Allow-Origin,Access-Control-Allow-Credentials'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Expose-Headers: true
          StatusCode: "200"
      ResourceId:
        Ref: OidcApiwellknown490C3B76
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/OPTIONS/Resource
  OidcApiwellknownopenidconfiguration3056CD13:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: OidcApiwellknown490C3B76
      PathPart: openid-configuration
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/openid-configuration/Resource
  OidcApiwellknownopenidconfigurationOPTIONS4C917684:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Expose-Headers: "'Access-Control-Allow-Origin,Access-Control-Allow-Credentials'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Expose-Headers: true
          StatusCode: "200"
      ResourceId:
        Ref: OidcApiwellknownopenidconfiguration3056CD13
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/openid-configuration/OPTIONS/Resource
  OidcApiwellknownopenidconfigurationGETApiPermissionTVMOidcIssuerStackOidcApi522E9F68GETwellknownopenidconfiguration598C7356:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - OidcLambdaCD904E33
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:us-east-1:592995829936:"
            - Ref: OidcApi1FA5902F
            - /
            - Ref: OidcApiDeploymentStageprod15405D20
            - /GET/.well-known/openid-configuration
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/openid-configuration/GET/ApiPermission.TVMOidcIssuerStackOidcApi522E9F68.GET...well-known.openid-configuration
  OidcApiwellknownopenidconfigurationGETApiPermissionTestTVMOidcIssuerStackOidcApi522E9F68GETwellknownopenidconfiguration6CA7E744:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - OidcLambdaCD904E33
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:us-east-1:592995829936:"
            - Ref: OidcApi1FA5902F
            - /test-invoke-stage/GET/.well-known/openid-configuration
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/openid-configuration/GET/ApiPermission.Test.TVMOidcIssuerStackOidcApi522E9F68.GET...well-known.openid-configuration
  OidcApiwellknownopenidconfigurationGET661390FA:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - OidcLambdaCD904E33
                  - Arn
              - /invocations
      ResourceId:
        Ref: OidcApiwellknownopenidconfiguration3056CD13
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/openid-configuration/GET/Resource
  OidcApiwellknownjwksjsonA2B6BE5A:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Ref: OidcApiwellknown490C3B76
      PathPart: jwks.json
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/jwks.json/Resource
  OidcApiwellknownjwksjsonOPTIONS880DFE8A:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: OPTIONS
      Integration:
        IntegrationResponses:
          - ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'"
              method.response.header.Access-Control-Expose-Headers: "'Access-Control-Allow-Origin,Access-Control-Allow-Credentials'"
            StatusCode: "200"
        RequestTemplates:
          application/json: "{ statusCode: 200 }"
        Type: MOCK
      MethodResponses:
        - ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Origin: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Expose-Headers: true
          StatusCode: "200"
      ResourceId:
        Ref: OidcApiwellknownjwksjsonA2B6BE5A
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/jwks.json/OPTIONS/Resource
  OidcApiwellknownjwksjsonGETApiPermissionTVMOidcIssuerStackOidcApi522E9F68GETwellknownjwksjsonDA8C435C:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - OidcLambdaCD904E33
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:us-east-1:592995829936:"
            - Ref: OidcApi1FA5902F
            - /
            - Ref: OidcApiDeploymentStageprod15405D20
            - /GET/.well-known/jwks.json
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/jwks.json/GET/ApiPermission.TVMOidcIssuerStackOidcApi522E9F68.GET...well-known.jwks.json
  OidcApiwellknownjwksjsonGETApiPermissionTestTVMOidcIssuerStackOidcApi522E9F68GETwellknownjwksjson607CB4DB:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - OidcLambdaCD904E33
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:aws:execute-api:us-east-1:592995829936:"
            - Ref: OidcApi1FA5902F
            - /test-invoke-stage/GET/.well-known/jwks.json
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/jwks.json/GET/ApiPermission.Test.TVMOidcIssuerStackOidcApi522E9F68.GET...well-known.jwks.json
  OidcApiwellknownjwksjsonGETF0F40DDF:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - OidcLambdaCD904E33
                  - Arn
              - /invocations
      ResourceId:
        Ref: OidcApiwellknownjwksjsonA2B6BE5A
      RestApiId:
        Ref: OidcApi1FA5902F
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcApi/Default/.well-known/jwks.json/GET/Resource
  OidcLambdaCD904E33:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ImageUri:
          Fn::Sub: 592995829936.dkr.ecr.us-east-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-592995829936-us-east-1:85b93b7008a04e5209784c6d9fd9ff2c49eef60b4bcd3d9eb6d97ec47456b795
      Environment:
        Variables:
          PRIVATE_KEY_PARAM: /oidc/private_key
          PUBLIC_KEY_PARAM: /oidc/public_key
          KID: us-east-1-kid
          REGION: us-east-1
          AUDIENCE: us-east-1-592995829936-tvm
      FunctionName: tvm-oidc-lambda
      PackageType: Image
      Role:
        Fn::GetAtt:
          - OidcLambdaRole0022AC47
          - Arn
      Timeout: 300
    DependsOn:
      - OidcLambdaRoleDefaultPolicy283E0578
      - OidcLambdaRole0022AC47
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OidcLambda/Resource
      aws:asset:path: asset.85b93b7008a04e5209784c6d9fd9ff2c49eef60b4bcd3d9eb6d97ec47456b795
      aws:asset:dockerfile-path: Dockerfile
      aws:asset:property: Code.ImageUri
  OIDCLambdaAuthorizer2ED4912C:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      AuthorizerResultTtlInSeconds: 300
      AuthorizerUri:
        Fn::Join:
          - ""
          - - "arn:"
            - Fn::Select:
                - 1
                - Fn::Split:
                    - ":"
                    - Fn::GetAtt:
                        - OIDCLambdaAuthorizerFn233BB6A3
                        - Arn
            - ":apigateway:"
            - Fn::Select:
                - 3
                - Fn::Split:
                    - ":"
                    - Fn::GetAtt:
                        - OIDCLambdaAuthorizerFn233BB6A3
                        - Arn
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
                - OIDCLambdaAuthorizerFn233BB6A3
                - Arn
            - /invocations
      IdentitySource: method.request.header.Authorization
      Name: TVMOidcIssuerStackOIDCLambdaAuthorizer32A584F4
      RestApiId:
        Ref: OidcApi1FA5902F
      Type: REQUEST
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OIDCLambdaAuthorizer/Resource
  OIDCIAMProviderD5697146:
    Type: Custom::AWSCDKOpenIdConnectProvider
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0
          - Arn
      ClientIDList:
        - us-east-1-592995829936-tvm
      Url:
        Fn::Join:
          - ""
          - - https://
            - Ref: OidcApi1FA5902F
            - .execute-api.us-east-1.
            - Ref: AWS::URLSuffix
            - /
            - Ref: OidcApiDeploymentStageprod15405D20
      CodeHash: 977fc1649d2dbcce16e23f6332faef6fa0f48aa74a0afe35f4a3467754e20cd8
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/OIDCIAMProvider/Resource/Default
  CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: Inline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - iam:CreateOpenIDConnectProvider
                  - iam:DeleteOpenIDConnectProvider
                  - iam:UpdateOpenIDConnectProviderThumbprint
                  - iam:AddClientIDToOpenIDConnectProvider
                  - iam:RemoveClientIDFromOpenIDConnectProvider
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Role
  CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-592995829936-us-east-1
        S3Key: 977fc1649d2dbcce16e23f6332faef6fa0f48aa74a0afe35f4a3467754e20cd8.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65
          - Arn
      Runtime: nodejs20.x
    DependsOn:
      - CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Handler
      aws:asset:path: asset.977fc1649d2dbcce16e23f6332faef6fa0f48aa74a0afe35f4a3467754e20cd8
      aws:asset:property: Code
  AudienceCondition7EB25743:
    Type: Custom::AWSCDKCfnJson
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57
          - Arn
      Value:
        Fn::Join:
          - ""
          - - '{"'
            - Ref: OidcApi1FA5902F
            - .execute-api.us-east-1.
            - Ref: AWS::URLSuffix
            - /
            - Ref: OidcApiDeploymentStageprod15405D20
            - :aud":"us-east-1-592995829936-tvm"}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/AudienceCondition/Resource/Default
  AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/AWSCDKCfnUtilsProviderCustomResourceProvider/Role
  AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-592995829936-us-east-1
        S3Key: 70dc346d78f37c98f818c01173252d7441864d42268efd4ee44769cbd6f31d24.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867
          - Arn
      Runtime: nodejs20.x
    DependsOn:
      - AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/AWSCDKCfnUtilsProviderCustomResourceProvider/Handler
      aws:asset:path: asset.70dc346d78f37c98f818c01173252d7441864d42268efd4ee44769cbd6f31d24
      aws:asset:property: Code
  QBusinessOIDCRoleD6A18BEF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRoleWithWebIdentity
            Condition:
              StringEquals:
                Fn::GetAtt:
                  - AudienceCondition7EB25743
                  - Value
              StringLike:
                aws:RequestTag/Email: "*"
            Effect: Allow
            Principal:
              Federated:
                Ref: OIDCIAMProviderD5697146
          - Action: sts:TagSession
            Condition:
              StringLike:
                aws:RequestTag/Email: "*"
            Effect: Allow
            Principal:
              Federated:
                Ref: OIDCIAMProviderD5697146
          - Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:SourceAccount: "592995829936"
              ArnEquals:
                aws:SourceArn: arn:aws:qbusiness:us-east-1:592995829936:application/*
            Effect: Allow
            Principal:
              Service: application.qbusiness.amazonaws.com
        Version: "2012-10-17"
      Description: Role for TVM OIDC-based authentication in Amazon Q Business.
      RoleName: tvm-qbiz-custom-oidc-role
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/QBusinessOIDCRole/Resource
  QBusinessPermissions5E263CC0:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - qbusiness:Chat
              - qbusiness:ChatSync
              - qbusiness:DeleteConversation
              - qbusiness:ListApplications
              - qbusiness:ListConversations
              - qbusiness:ListMessages
              - qbusiness:ListRetrievers
              - qbusiness:PutFeedback
              - qbusiness:Retrieve
              - qbusiness:SearchRelevantContent
            Effect: Allow
            Resource: arn:aws:qbusiness:us-east-1:592995829936:application/*
            Sid: QBusinessConversationPermission
          - Action: sts:SetContext
            Condition:
              StringLike:
                aws:CalledViaLast:
                  - qbusiness.amazonaws.com
            Effect: Allow
            Resource: arn:aws:sts::*:self
            Sid: QBusinessSetContextPermissions
          - Action: user-subscriptions:CreateClaim
            Condition:
              StringEquals:
                aws:CalledViaLast: qbusiness.amazonaws.com
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: QBusinessPermissions5E263CC0
      Roles:
        - Ref: QBusinessOIDCRoleD6A18BEF
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/QBusinessPermissions/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/21Q227CMAz9Ft5LNmDaOxRNYtJEVT4AhdSU0CbuYgfUVf33KSkFNO0px+dix56L2ftMzCbySlNVVNNaH0S3Y6mqRF5p3xGZUDtty0w6aYDBJenR3os+0dKILscaAh/fDGut2mgb0LYBuylStBYUZw4vugjJWppDIUW3RlWB2xhZwoe3ijXaEL7jZzIDZzSRRtsnoNxeEgGTeGqxDEzQRA4NkmZ07UoSJLQY3YOFFmLlVQUcVdnoUjJcZSu6HIiXjY4LPeBSKfSWkzU0NbYGLAf2qdqxLOMVBpADoXcKYvsv4BMWQbyhUb0NGXAO3z4M9HxCp3+GWz+qvn/E4g5hkLZlojwxmr27iSTGIydpVP4dlh7t1nPj+Y9pzMZ/p0f7SeHYFgsQZ3q5zOdi9iZeJ2fSeuq8ZW1A5MP7C511kzlPAgAA
    Metadata:
      aws:cdk:path: TVMOidcIssuerStack/CDKMetadata/Default
Outputs:
  OidcApiEndpoint4C31BB7B:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: OidcApi1FA5902F
          - .execute-api.us-east-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: OidcApiDeploymentStageprod15405D20
          - /
  AudienceOutput:
    Description: OIDC Audience ID
    Value: us-east-1-592995829936-tvm
    Export:
      Name: OIDCAudience
  IssuerUrlOutput:
    Description: Issuer URL (API Gateway)
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: OidcApi1FA5902F
          - .execute-api.us-east-1.
          - Ref: AWS::URLSuffix
          - /
          - Ref: OidcApiDeploymentStageprod15405D20
          - /
    Export:
      Name: IssuerUrl
  QBizAssumeRoleARN:
    Description: Amazon Q Business Role to Assume
    Value:
      Fn::GetAtt:
        - QBusinessOIDCRoleD6A18BEF
        - Arn
    Export:
      Name: AssumeRoleARN
  QbizTVMClientID:
    Description: The TVM Client ID
    Value: oidc-tvm-592995829936
    Export:
      Name: TVMClientID
  QbizTVMClientSecret:
    Description: The TVM Client Secret
    Value: 009e536e781fc8f2fc6df9c7
    Export:
      Name: TVMClientSecret
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]

